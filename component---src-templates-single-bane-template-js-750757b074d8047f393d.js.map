{"version":3,"sources":["webpack://gatsby-starter-default/./node_modules/@material-ui/icons/ArrowBack.js","webpack://gatsby-starter-default/./src/components/banes/single-item-bane.js","webpack://gatsby-starter-default/./src/templates/singleBaneTemplate.js"],"names":["_interopRequireDefault","_interopRequireWildcard","exports","React","_default","default","createElement","d","useStyles","makeStyles","baneSection","fontSize","margin","paddingBottom","toolbar","backgroundColor","color","backButton","backIcon","bane","classes","className","container","Toolbar","IconButton","disableRipple","to","ArrowBack","style","lineHeight","name","duration","invocationTime","power","map","item","index","length","attackAttributes","attack","key","description","parseStrToHtml","effect","special","SingleBaneTemplate","data","allBanesBanesYaml","edges","node"],"mappings":"yIAEIA,EAAyB,EAAQ,MAEjCC,EAA0B,EAAQ,MAKtCC,EAAQ,OAAU,EAElB,IAAIC,EAAQF,EAAwB,EAAQ,OAIxCG,GAAW,EAFMJ,EAAuB,EAAQ,OAElBK,SAAuBF,EAAMG,cAAc,OAAQ,CACnFC,EAAG,iEACD,aAEJL,EAAQ,EAAUE,G,+ICTZI,GAAYC,OAAY,CAC5BC,YAAa,CACXC,SAAU,OACVC,OAAQ,OACRC,cAAe,QAEjBC,QAAS,CACPC,gBAAiB,uBACjBC,MAAO,yBACPL,SAAU,QAEZM,WAAY,CACV,UAAW,CACTF,gBAAiB,gBAGrBG,SAAU,CACRF,MAAO,4BAyDX,MApDA,YAAuC,IAATG,EAAQ,EAARA,KACtBC,EAAUZ,IAEd,OACE,uBAAKa,UAAWD,EAAQE,WACtB,gBAACC,EAAA,EAAD,CAASF,UAAWD,EAAQN,SAC1B,gBAAC,EAAAU,WAAD,CAAYC,eAAa,EAACC,GAAG,SAASL,UAAWD,EAAQH,YACvD,gBAACU,EAAA,EAAD,CAAgBN,UAAWD,EAAQF,YAFvC,qBAMA,uBAAKG,UAAWD,EAAQV,aACtB,sBAAIkB,MAAO,CAAEC,WAAY,SACtBV,EAAKW,MAER,yBAAG,4CAA4BX,EAAKY,UACpC,yBAAG,mDAAmCZ,EAAKa,gBAC3C,yBAAG,+CAA+Bb,EAAKc,MAAMC,KAAI,SAACC,EAAMC,GACpD,OAAIA,EAAQjB,EAAKc,MAAMI,OAAS,EAAaF,EAAV,KAC5BA,MAGX,yBAAG,qDAAqChB,EAAKmB,iBAAiBJ,KAAI,SAACC,EAAMC,GACrE,OAAIA,EAAQjB,EAAKmB,iBAAiBD,OAAS,EAAaF,EAAV,KACvCA,MAGX,yBAAG,2CACH,0BACA,0BACGhB,EAAKoB,OAAOL,KAAI,SAACC,EAAMC,GACtB,OACE,sBAAII,IAAKJ,GAAQD,OAIvB,yBAAG,8CACH,yBAAIhB,EAAKsB,aACT,yBAAG,yCACH,4BAAMC,QAAevB,EAAKwB,SACzBxB,EAAKyB,QACF,2BACE,yBAAG,2CACFF,QAAevB,EAAKyB,UAEvB,KACJ,6BC1EK,SAASC,EAAT,GAAuC,IAC9C1B,EAD6C,EAAR2B,KACzBC,kBAAkBC,MAAM,GAAGC,KAC7C,OACE,2BACE,gBAAC,EAAD,CAAgB9B,KAAMA","file":"component---src-templates-single-bane-template-js-750757b074d8047f393d.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","import React from 'react';\n\nimport {default as parseStrToHtml} from 'html-react-parser';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { IconButton } from 'gatsby-theme-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles(({\n  baneSection: {\n    fontSize: '16px',\n    margin: '24px',\n    paddingBottom: '24px'\n  },\n  toolbar: {\n    backgroundColor: 'rgba(81,45,168, 0.9)',\n    color: 'rgba(255,255,255,0.87)',\n    fontSize: '20px',\n  },\n  backButton: {\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  backIcon: {\n    color: 'rgba(255,255,255,0.87)',\n  }\n}))\n\n\nfunction SingleItemPageBane({ bane }) {\n  const classes = useStyles();\n\n    return (\n      <div className={classes.container}>\n        <Toolbar className={classes.toolbar}> \n          <IconButton disableRipple to='/banes' className={classes.backButton} >\n            <ArrowBackIcon  className={classes.backIcon} />\n          </IconButton>\n            Back To Bane List\n        </Toolbar>\n        <div className={classes.baneSection}>\n          <h2 style={{ lineHeight: '40px' }}>\n            {bane.name}\n          </h2>\n          <p><strong>Duration: </strong>{bane.duration}</p>\n          <p><strong>Invocation Time: </strong>{bane.invocationTime}</p>\n          <p><strong>Power Level: </strong>{bane.power.map((item, index) => {\n              if (index < bane.power.length - 1) return `${item}/ `;\n              return item;\n            })}\n          </p>\n          <p><strong>Attack Attributes: </strong>{bane.attackAttributes.map((item, index) => {\n              if (index < bane.attackAttributes.length - 1) return `${item}, `;\n              return item;\n            })}\n          </p>\n          <p><strong>Attack: </strong></p>\n          <p></p>\n          <ul>\n            {bane.attack.map((item, index) => {\n              return (\n                <li key={index}>{item}</li>\n              )\n            })}\n          </ul>\n          <p><strong>Description</strong></p>\n          <p>{bane.description}</p>\n          <p><strong>Effect</strong></p>\n          <div>{parseStrToHtml(bane.effect)}</div>\n          {bane.special ? \n              <div>\n                <p><strong>Special</strong></p> \n                {parseStrToHtml(bane.special)} \n              </div>\n            : null}\n          <p></p> \n        </div>\n      </div>\n    )\n}\n\nexport default SingleItemPageBane;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport SingleItemBane from '../components/banes/single-item-bane';\n\nexport default function SingleBaneTemplate({ data }) {\n  const bane = data.allBanesBanesYaml.edges[0].node\n  return (\n    <div>\n      <SingleItemBane bane={bane} />\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query SingleBane($slug: String) {\n    allBanesBanesYaml(filter: {fields: {slug: {eq: $slug}}}) {\n      edges {\n        node {\n          attack\n          attackAttributes\n          description\n          duration\n          effect\n          invocationTime\n          name\n          power\n          special\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}